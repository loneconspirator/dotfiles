unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

bind-key C-c split-window -h -l 40 -b -c ~/git/dotfiles "cat cheat_sheet.txt; echo 'Press Return...'; read -n 1 -s"

set -g default-shell /bin/zsh

# Re-source this file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Execute a command in a new pane
bind-key e command-prompt -p "command> " "split-window -v %%"

# Basic terminal niceities
set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs"
set -sg escape-time 0
set-option -g history-limit 5000

# Appearance
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'
set -g status-fg '#666666'
set -g status-bg '#aaaaaa'

set -g status-left-length 50
set -g status-right " #(/usr/local/bin/battery -te) #(date '+%a, %b %d - %I:%M')"
set -g status-interval 60

# Creating and navigating panes
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \\ split-window -h -c '#{pane_current_path}'

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Pane size adjustment
bind-key C-h resize-pane -L 5
bind-key C-l resize-pane -R 5
bind-key C-j resize-pane -D 2
bind-key C-k resize-pane -U 2

# Window navigation
bind C-Tab next-window

bind c new-window -c "#{pane_current_path}"
set -g base-index 1
set -g renumber-windows on

bind-key b break-pane -d

# Session management
bind-key C-b send-keys 'tat && exit' 'C-m'
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
bind-key C-w split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"


bind-key C-t choose-tree

# bind-key l send-keys 'C-l' # forward clear screen command despite tmux remappings
bind-key k send-keys -R \; clear-history

set-window-option -g xterm-keys on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"<Paste>
